version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile-dashboard
        container_name: dashboard
        restart: always
        depends_on:
        - mongodb
        ports:
        - "8501:8501"
    postgres:
        image: postgres
        container_name: airflow_db
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        volumes:
            - postgresdb_data:/var/lib/postgresql/data
        #healthcehck : "airflow db check"  should return "INFO - Connection successful."
        # healthcheck:
        #     test: ["CMD", "test=`airflow db check`", "echo", ]
        #     interval: 15s
        #     timeout: 30s
        #     retries: 5
    webserver:
        image: apache/airflow
        container_name: airflow_webserver
        entrypoint: ./scripts/entrypoint.sh
        restart: always
        depends_on:
            - postgres
            - scheduler
        env_file:
            - .env
        volumes: &volumes
            - ./dags:/opt/airflow/dags
            - ./plugins:/opt/airflow/plugins
            - ./scripts:/opt/airflow/scripts
            - ./tests:/opt/airflow/tests
            - ./logs:/opt/airflow/logs
            - ./requirements.txt:/opt/airflow/requirements.txt
        ports:
            - "8080:8080"
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
            interval: 15s
            timeout: 30s
            retries: 5
    scheduler:
        image: apache/airflow
        container_name: airflow_scheduler
        command: bash -c 'pip install -r /opt/airflow/requirements.txt; airflow db init; airflow scheduler'
        restart: always
        depends_on:
            - postgres
        env_file:
            - .env
        volumes: *volumes
        ports:
            - "8793:8793"
    selenium:
        image: selenium/standalone-chrome
        container_name: selenium
        ports:
            - "4444:4444"
            #- "7900:7900" # noVNC for debugging, need to update to ver 4.prerelease
    mongodb:
        image: mongo
        container_name: mongodb
        environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=root
        volumes:
            - mongodb_data:/data/db
        ports: 
            - "27017:27017"
        healthcheck:
            test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u root -p root --quiet | grep 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        restart: on-failure
    mongo-express:
        image: mongo-express
        container_name: mongo_express
        environment:
        - ME_CONFIG_MONGODB_SERVER=mongodb
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root
        - ME_CONFIG_MONGODB_ADMINPASSWORD=root
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
        - ME_CONFIG_BASICAUTH_USERNAME=admin
        - ME_CONFIG_BASICAUTH_PASSWORD=admin
        depends_on: 
            - mongodb
        ports: 
            - "8081:8081"
        healthcheck:
            test:  wget --quiet --tries=2 --spider http://admin:admin@localhost:8081 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        restart: always
volumes:
    postgresdb_data:
    mongodb_data: